14.
- Which classes are aggregates of other classes?
Checking all constructors of whole classes if they initialize for their parts?
- Write constructors for parent and child classes. Remove redundant setter methods if any
Answer:
- Cart is aggregate of Media. Store is aggregate of Media. CompactDisc is aggregate of Track
- Already in the code
15.
When overriding the equals() method of the Object class, you will have to cast the Object
parameter obj to the type of Object that you are dealing with. For example, in the Media class,
you must cast the Object obj to a Media, and then check the equality of the two objectsâ€™ attributes
as the above requirements (i.e. title for Media; title and length for Track). If the
passing object is not an instance of Media, what happens?

Answer: If the passed object is not an instance of Media, the equals() method returns false.
This indicates that the two objects are not equal,
as they belong to different classes or incompatible types.

16. Reading assignment
- What are the advantages of Polymorphism?
- How is Inheritance useful to achieve Polymorphism in Java?
- What are the differences between Polymorphism and Inheritance in Java?

Answers:
- Polymorphism provides many advantages such as:
    + Code Reusability: Polymorphism provides the reuse of code,
    as methods with the same name can be used in different classes.
    + Flexibility and Dynamism: Polymorphism allows for more flexible and dynamic code,
    where the behaviour of an object can change at runtime depending on the context
    in which it is being used.
    + Reduced Complexity: It can reduce the complexity of code by allowing
    the use of the same method name for related functionality, making the code easier to read and maintain.
    + Simplified Coding: Polymorphism simplifies coding by reducing the number of methods
    and constructors that need to be written.
    + Better Organization: Polymorphism allows for better organization of code
    by grouping related functionality in one class.
    + Code Extensibility: Polymorphism enables code extensibility,
    as new subclasses can be created to extend the functionality of the superclass
    without modifying the existing code.
    + Increased Efficiency: Compile-time polymorphism can lead to more efficient coding.
    The compiler can choose the appropriate method to call at compile time,
    based on the number, types, and order of arguments passed to it.
- Inheritance lets us inherit attributes and methods from another class.
Polymorphism uses those methods to perform different tasks.
This allows us to perform a single action in different ways.
- The difference:
+ Inheritance:
    ->Inheritance is one in which a new class is created (derived class)
    that inherits the features from the already existing class(Base class).
    ->It is basically applied to classes.
    ->Inheritance supports the concept of reusability and reduces code length in object-oriented programming.
    ->Inheritance can be single, hybrid, multiple, hierarchical and multilevel inheritance.
    ->It is used in pattern designing.
+ Polymorphism:
    ->Whereas polymorphism is that which can be defined in multiple forms.
    ->Whereas it is basically applied to functions or methods.
    ->Polymorphism allows the object to decide which form of the function to implement
    at compile-time (overloading) as well as run-time (overriding).
    ->Whereas it can be compiled-time polymorphism (overload) as well as run-time polymorphism (overriding).
    ->While it is also used in pattern designing.